{"version":3,"sources":["Store/action/MainAction.js","componentsJS/Header/Header.js","componentsJS/SlotsScenes/ScrenScene/Bookmark.js","componentsJS/SlotsScenes/ScrenScene/DetailСofiguration/Symbols/Symbols.js","componentsJS/SlotsScenes/ScrenScene/DetailСofiguration/Paytable/Paytable.js","componentsJS/SlotsScenes/ScrenScene/DetailСofiguration/Substitutes/Substitutes.js","componentsJS/SlotsScenes/ScrenScene/DetailСofiguration/Secial/Secial.js","componentsJS/SlotsScenes/ScrenScene/DetailСofiguration/DetailСofiguration.js","componentsJS/SlotsScenes/ScrenScene/ScrenScene.js","componentsJS/SlotsScenes/SlotsScenes.js","App/App.js","reportWebVitals.js","Store/reducers/initialState.js","Store/reducers/components/CreateScene.js","Store/reducers/components/Inputs.js","Store/reducers/components/Deletes.js","Store/reducers/components/Select.js","Store/reducers/components/StartReset.js","Store/reducers/components/AddSymbol.js","Store/reducers/components/DeleteSymbol.js","Store/reducers/DefaultOperation.js","Store/reducers/MainReducer.js","index.js","Store/CreateStore.js"],"names":["CreateAction","Type","value","type","paylot","Header","DefaultOperation","this","props","state","className","FirstInputId","style","width","height","marginLeft","onChange","undefined","Game","InputFid","FirstInputName","InputFname","onClick","PressFirstBut","FirstBut","justifyContent","marginRight","Component","connect","dispatch","event","target","Bookmark","Id","Select","backgroundColor","BookmarkList","backg","SceneList","SceneName","Symbols","margin","borderRight","overflow","keys","length","map","key","name","id","DeleteSymbol","v1","v2","AddSymbol","Paytable","maxWidth","minWidth","border","n","key1","Substiture","Special","butStyle","SlectedB","background","SlectedD","display","DetailСofiguration","marginTop","SelectMC","ScernTypeOfConf","Reelstrip","ScrenScene","NS","InputNS","GT","InputGT","NOR","InputNOR","NumberOfReels","num","parseInt","replace","ScrenList","InputLabel","labelId","GameType","MenuItem","Delete","SlotsScenes","borderBottom","borderLeft","AddScene","App","State","AddContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","CreateScene","GameName","0","Substitutes","SlectedScernTypeOfConf","TotalRTP","BaseGameRTP","FreespinsRTP","BonusGameRTP","BasegameHitRate","HitRate","Combinations","Returns","BookmarkOn","N","C","i","action","InputFN","InputSN","DeleteScene","omit","k","v","s","s2","StartReset","masKey","PayT","Subst","symbols","1","isWild","isScatter","isSpecific","DefaultOpration","combineReducers","store","createStore","MainReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7bdaf2e.chunk.js","sourcesContent":["export const CreateAction =(Type, value) => {\r\n    return {\r\n        type: Type,\r\n        paylot:value,\r\n        \r\n    }\r\n}\r\n \r\n","\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './Header.css'\r\nimport {CreateAction} from '../../Store/action/MainAction';\r\n\r\nclass Header extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"container_row\">\r\n            <input className=\"con_input\" value={DefaultOperation.FirstInputId} style={{width:\"50px\",height:\"30px\",marginLeft:\"10px\"}} onChange={DefaultOperation.Game==undefined?this.props.InputFid:()=>{}}/>\r\n                \r\n            \r\n            <input className=\"con_input\" value={DefaultOperation.FirstInputName} style={{height:\"30px\",marginLeft:\"10px\"}}  onChange={ DefaultOperation.Game==undefined?this.props.InputFname:()=>{}}/>\r\n                \r\n            \r\n            <div className=\"con_but\" style={{width:\"90px\",height:\"30px\",marginLeft:\"10px\"}} onClick={()=>this.props.PressFirstBut(DefaultOperation)}>\r\n                {\r\n                    DefaultOperation.FirstBut \r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n        <div className=\"container_row\" style={{justifyContent:'flex-end'}}>\r\n             <div className=\"con_but\" style={{width:\"90px\",height:\"30px\"}}>\r\n                export\r\n            </div>\r\n            <div className=\"con_but\" style={{width:\"90px\",height:\"30px\",marginLeft:\"10px\", marginRight:\"10px\"}}>\r\n                import\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({\r\n    PressFirstBut: (DefaultOperation, value) => {\r\n      if(DefaultOperation.Game==undefined)\r\n        dispatch(CreateAction(\"ADD_NEW_SCENE\", value))\r\n        dispatch(CreateAction(\"START_RESET\"))\r\n    },\r\n    InputFid: (event) => {\r\n        dispatch(CreateAction(\"INPUT_FID\", event.target.value))\r\n    },\r\n    InputFname: (event) => {\r\n        dispatch(CreateAction(\"INPUT_FNAME\", event.target.value))\r\n    }\r\n  })\r\n)(Header);","\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../Store/action/MainAction';\r\n\r\n\r\nclass Bookmark extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"Bookmark\" onClick={()=>this.props.Select(this.props.Id)} style={{backgroundColor:DefaultOperation.BookmarkList[Id].backg}}>\r\n         {DefaultOperation.Game.SceneList[Id].SceneName}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({Select: (value) => {\r\n    \r\n      dispatch(CreateAction(\"SELECT\", value))\r\n      \r\n  },\r\n})\r\n)(Bookmark);\r\n","import {keys} from \"lodash\"\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../../../Store/action/MainAction';\r\n\r\n\r\nclass Symbols extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"container_column\">\r\n          <div className=\"container_row\" style={{margin:\"20px\"}}>\r\n            <div className=\"container_column\" style={{width:\"100px\", borderRight:\"1px solid black\"}}>\r\n                \r\n                    <div className=\"container_row\" style={{width:\"100px\", borderRight:\"1px solid black\"}}>\r\n                        Symbols Name\r\n                    </div>\r\n                    \r\n                \r\n                \r\n                    <div className=\"container_row\" style={{width:\"100px\", borderRight:\"1px solid black\"}}>\r\n                        ID\r\n                    </div>\r\n                \r\n            </div>\r\n            \r\n            <div className=\"container_row\"  style={{overflow:\"auto\"}}>\r\n            {\r\n                        keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                            keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key) =>\r\n                            <div className=\"container_column\" key={key} style={{width:\"80px\"}}>\r\n                                <div className=\"container_row\">\r\n                                    {DefaultOperation.Game.SceneList[Id].Symbols[key].name}\r\n                                </div>\r\n                                <div className=\"container_row\">\r\n                                    {DefaultOperation.Game.SceneList[Id].Symbols[key].id}\r\n                                </div>\r\n                                <div className=\"con_but\" onClick={()=>this.props.DeleteSymbol({v1:Id,v2:key})}>\r\n                                    remove\r\n                                </div>\r\n                                \r\n                            </div>\r\n                                ):<div></div>\r\n                                \r\n                        \r\n                    }\r\n            </div>\r\n            <div className=\"con_but\" style={{width:\"50px\"}} onClick={()=>this.props.AddSymbol(Id)}>\r\n                +\r\n            </div>\r\n          </div>\r\n          <div className=\"container_row\">\r\n              <div style={{width:\"50px\"}}  >\r\n\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({\r\n      AddSymbol: (value) => {\r\n    \r\n      dispatch(CreateAction(\"ADD_SYMBOL\", value))\r\n      \r\n      \r\n  },\r\n  DeleteSymbol: (value) => {\r\n    \r\n    dispatch(CreateAction(\"DELETE_SYMBOL\", value))\r\n    \r\n},\r\n})\r\n)(Symbols);\r\n","import {keys} from \"lodash\"\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../../../Store/action/MainAction';\r\n\r\n\r\nclass Paytable extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"container_column\" style={{overflow:\"auto\", maxWidth:\"600px\"}}>\r\n          <div className=\"container_row\" >\r\n            <div className=\"container_row\" style={{minWidth:\"100px\",border:\"1px solid black\"}}>\r\n                Symbol\r\n            </div>\r\n            {\r\n                \r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key, n=1)=>\r\n                            <div key={key}  className=\"container_row\" style={{maxWidth:\"40px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                {n+1}\r\n                            </div>)\r\n                :<div></div>\r\n            }\r\n          </div>\r\n          {\r\n                \r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key)=>\r\n                            <div className=\"container_column\"  key={key}>\r\n                                <div className=\"container_row\">\r\n                                <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\", overflow:\"hidden\"}}>\r\n                                    {DefaultOperation.Game.SceneList[Id].Symbols[key].name}\r\n                                </div>\r\n                                {keys(DefaultOperation.Game.SceneList[Id].Symbols[key].Paytable).map((key1)=>\r\n                                    <div key={key1}  className=\"container_row\" style={{maxWidth:\"40px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                        {\r\n                                            \r\n                                            DefaultOperation.Game.SceneList[Id].Symbols[key].Paytable[key1]\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            )\r\n                :<div></div>\r\n            }\r\n    </div>   \r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({})\r\n)(Paytable);\r\n","import {keys} from \"lodash\"\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../../../Store/action/MainAction';\r\n\r\n\r\nclass Substiture extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"container_column\" style={{overflow:\"auto\", maxWidth:\"800px\"}}>\r\n          <div className=\"container_row\" >\r\n            <div className=\"container_row\" style={{minWidth:\"100px\",border:\"1px solid black\"}}>\r\n                Substiture\r\n            </div>\r\n            {\r\n                \r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key)=>\r\n                            <div key={key}  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                {DefaultOperation.Game.SceneList[Id].Symbols[key].name}\r\n                            </div>)\r\n                :<div></div>\r\n            }\r\n          </div>\r\n          {\r\n                \r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key)=>\r\n                            <div className=\"container_column\"  key={key}>\r\n                                <div className=\"container_row\">\r\n                                <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\", overflow:\"hidden\"}}>\r\n                                    {DefaultOperation.Game.SceneList[Id].Symbols[key].name}\r\n                                </div>\r\n                                {keys(DefaultOperation.Game.SceneList[Id].Symbols[key].Substiture).map((key1)=>\r\n                                    <div key={key1}  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                        {\r\n                                            \r\n                                            DefaultOperation.Game.SceneList[Id].Symbols[key].Substiture[key1]+\"\"\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            )\r\n                :<div></div>\r\n            }\r\n    </div>   \r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({})\r\n)(Substiture);\r\n","import {keys} from \"lodash\"\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../../../Store/action/MainAction';\r\n\r\n\r\nclass Special extends Component {\r\n  \r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"container_column\" style={{overflow:\"auto\", maxWidth:\"800px\"}}>\r\n          <div className=\"container_row\" >\r\n            <div className=\"container_row\" style={{minWidth:\"100px\",border:\"1px solid black\"}}>\r\n                Symbols\r\n            </div>\r\n            \r\n                \r\n                \r\n                            <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                sWild\r\n                            </div>\r\n                            <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                isScatter\r\n                            </div>\r\n                            <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                isSpecific\r\n                            </div>\r\n                \r\n            \r\n          </div>\r\n          {\r\n                \r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols).length!=0?\r\n                keys(DefaultOperation.Game.SceneList[Id].Symbols)\r\n                            .map((key)=>\r\n                            <div className=\"container_column\"  key={key}>\r\n                                <div className=\"container_row\">\r\n                                <div  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\", overflow:\"hidden\"}}>\r\n                                    {DefaultOperation.Game.SceneList[Id].Symbols[key].name}\r\n                                </div>\r\n                                {keys(DefaultOperation.Game.SceneList[Id].Symbols[key].Special).map((key1)=>\r\n                                    <div key={key1}  className=\"container_row\" style={{minWidth:\"100px\", border:\"1px solid black\", justifyContent:\"center\"}}>\r\n                                        {\r\n                                            \r\n                                            DefaultOperation.Game.SceneList[Id].Symbols[key].Special[key1]+\"\"\r\n                                            \r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            )\r\n                :<div></div>\r\n            }\r\n    </div>   \r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({})\r\n)(Special);\r\n","\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../../../Store/action/MainAction';\r\nimport './DetailСofiguration.css'\r\nimport Symbols from './Symbols/Symbols'\r\nimport Paytable from './Paytable/Paytable'\r\nimport Substiture from './Substitutes/Substitutes'\r\nimport Special from './Secial/Secial'\r\n\r\nlet butStyle={height:\"30px\", justifyContent:\"flex-start\" }\r\nlet SlectedB={background:\"green\",height:\"30px\", justifyContent:\"flex-start\" }\r\nlet SlectedD={display:\"flex\"}\r\nclass DetailСofiguration extends Component {\r\n\r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n        <div className=\"containe_column\" style={{marginTop:\"40px\",}}>\r\n            <div className=\"con_sub\" onClick={()=>this.props.SelectMC({v1:\"Symbols\",v2:Id})} style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Symbols?SlectedB:butStyle}>\r\n                Symbols\r\n            </div>\r\n            <div className=\"table_scrin\" style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Symbols?SlectedD:{display:\"none\"}}>\r\n                <Symbols\r\n                    Id={Id}\r\n                />\r\n            </div>\r\n            <div className=\"con_sub\" onClick={()=>this.props.SelectMC({v1:\"Paytable\",v2:Id})} style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Paytable?SlectedB:butStyle}>\r\n                Paytable\r\n            </div>\r\n            <div className=\"table_scrin\" style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Paytable?SlectedD:{display:\"none\"}}>\r\n                <Paytable\r\n                    Id={Id}\r\n                />\r\n            </div>\r\n            <div className=\"con_sub\" onClick={()=>this.props.SelectMC({v1:\"Substiture\",v2:Id})} style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Substiture?SlectedB:butStyle}>\r\n                Substiture\r\n            </div>\r\n            <div className=\"table_scrin\" style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Substiture?SlectedD:{display:\"none\"}}>\r\n                \r\n                <Substiture Id={Id}/>\r\n            </div>\r\n            <div className=\"con_sub\" onClick={()=>this.props.SelectMC({v1:\"Special\",v2:Id})} style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Special?SlectedB:butStyle}>\r\n                Special\r\n            </div>\r\n            <div className=\"table_scrin\" style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Special?SlectedD:{display:\"none\"}}>\r\n                <Special\r\n                     Id={Id}\r\n                />\r\n            </div>\r\n            <div className=\"con_sub\" onClick={()=>this.props.SelectMC({v1:\"Reelstrip\",v2:Id})} style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Reelstrip?SlectedB:butStyle}>\r\n                Reelstrip\r\n            </div>\r\n            <div className=\"table_scrin\" style={DefaultOperation.Game.SceneList[Id].ScernTypeOfConf.Reelstrip?SlectedD:{display:\"none\"}}>\r\n                1\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({SelectMC: (value) => {\r\n    \r\n      dispatch(CreateAction(\"SELECT_MENU_CONFIG\", value))\r\n      \r\n  },\r\n})\r\n)(DetailСofiguration);\r\n","\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\n\r\nimport {CreateAction} from '../../../Store/action/MainAction';\r\nimport './ScrenScene.css'\r\nimport DetailConfiguration from './DetailСofiguration/DetailСofiguration'\r\n\r\n\r\nclass ScrenScene extends Component {\r\n  NS=(event)=>{\r\n    this.props.InputNS({v1:event.target.value, v2:this.props.Id})\r\n  }\r\n  GT = (event) => {\r\n   \r\n    this.props.InputGT({v1:event.target.value, v2:this.props.Id} );\r\n  };\r\n  NOR=(event)=>{\r\n    \r\n     if(event.target.value==\"\"){\r\n      let num = 1\r\n      this.props.InputNOR({v1:num, v2:this.props.Id} );\r\n      }\r\n    else if(this.props.state.DefaultOperation.Game.SceneList[this.props.Id].NumberOfReels<1){\r\n      let num = 1\r\n      this.props.InputNOR({v1:num, v2:this.props.Id} );\r\n      }\r\n    else if(this.props.state.DefaultOperation.Game.SceneList[this.props.Id].NumberOfReels>=1)\r\n      {\r\n        let num = parseInt(event.target.value.replace(/\\D+/g,\"\"))\r\n      this.props.InputNOR({v1:num, v2:this.props.Id} );\r\n    }\r\n    \r\n      \r\n  }\r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    const{Id}=this.props\r\n    return (\r\n      <div className=\"ScrenScene\" style={{display:DefaultOperation.ScrenList[Id].display}}>\r\n          <div className=\"container_column\">\r\n            <div   className=\"container_row\">\r\n\r\n            <div  className=\"container_column\">\r\n            \r\n            <InputLabel id=\"SceneName\">SceneName </InputLabel>\r\n            <input className=\"con_input\" value={DefaultOperation.Game.SceneList[Id].SceneName} onChange={this.NS} style={{height:\"30px\"}}/>\r\n          \r\n            <InputLabel id=\"GameType\">GameType</InputLabel>\r\n            <Select labelId=\"GameType\" id=\"select\" onChange={this.GT} value={DefaultOperation.Game.SceneList[Id].GameType}>\r\n              <MenuItem value=\"Slot\">Slot</MenuItem>\r\n              <MenuItem value=\"Bonus\">Bonus</MenuItem>\r\n            </Select>\r\n          \r\n          \r\n            <InputLabel id=\"NumberofReels\">Number of Reels </InputLabel>\r\n            <input className=\"con_input\" onChange={this.NOR} style={{height:\"30px\"}} value={DefaultOperation.Game.SceneList[Id].NumberOfReels}/>\r\n          \r\n          </div>\r\n          <div className=\"container_row\" style={{justifyContent:\"flex-end\"}}>\r\n            <div className=\"con_but\" style={{width:\"90px\",height:\"25px\"}} onClick={()=>this.props.Delete(Id)}>\r\n              Delete\r\n            </div>\r\n          </div>\r\n\r\n            </div>\r\n            <DetailConfiguration\r\n              Id={Id}\r\n            />\r\n          </div>  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({\r\n    Delete: (value) => {\r\n      dispatch(CreateAction(\"DELETE_SCENE\", value))\r\n    },\r\n    InputNS: (value) => {\r\n        dispatch(CreateAction(\"INPUT_SCENE_NAME\", value))\r\n    },\r\n    InputGT: (value) => {\r\n        dispatch(CreateAction(\"INPUT_GAME_TYPE\", value))\r\n    },\r\n    InputNOR: (value) => {\r\n      dispatch(CreateAction(\"INPUT_NUM_REELS\", value))\r\n  },\r\n  })\r\n)(ScrenScene);\r\n","import {keys} from \"lodash\"\r\nimport {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {CreateAction} from '../../Store/action/MainAction';\r\nimport './SlotsScenes.css'\r\nimport Bookmark from './ScrenScene/Bookmark'\r\nimport ScrenScene from './ScrenScene/ScrenScene'\r\n\r\n\r\nclass SlotsScenes extends Component {\r\n   \r\n\r\n  render(){\r\n    const{DefaultOperation}=this.props.state\r\n    return (\r\n      <div className=\"SlotsScenes\">\r\n        <div className=\"container_row\" style={{height:\"30px\",borderBottom:\"1px solid green\"}}>\r\n            <div className=\"container_row\">\r\n                \r\n                {\r\n                   DefaultOperation.Game!=undefined?\r\n                    keys(DefaultOperation.Game.SceneList)\r\n                    .map((key) =>\r\n                        <Bookmark key={key}\r\n                            Id={key}\r\n                        />\r\n                    ):<div></div>\r\n                    \r\n                        \r\n                }\r\n            </div>\r\n            <div className=\"con_but\" style={{height:\"100%\", width:\"30px\",border:\"none\",borderLeft:\"1px solid black\"}} onClick={this.props.AddScene}>\r\n                +\r\n            </div>\r\n        </div>\r\n        <div className=\"container_column\">\r\n        {\r\n                   DefaultOperation.Game!=undefined?\r\n                    keys(DefaultOperation.Game.SceneList)\r\n                    .map((key) =>\r\n                        <ScrenScene key={key}\r\n                            Id={key}\r\n                        />\r\n                    ):<div></div>\r\n                    \r\n                        \r\n                }\r\n             \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(\r\n  state=>({state:state}),\r\n  dispatch => ({\r\n    AddScene: (state) => {\r\n        \r\n          dispatch(CreateAction(\"ADD_NEW_SCENE\"))\r\n          \r\n      },\r\n  })\r\n)(SlotsScenes);\r\n","import '../common/Style/main.css'\nimport {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {CreateAction} from '../Store/action/MainAction';\nimport Header from '../componentsJS/Header/Header'\nimport SlotsScenes from '../componentsJS/SlotsScenes/SlotsScenes'\n\nclass App extends Component {\n  \n  render(){\n    return (\n      <div className=\"App\">\n         <Header/>\n         {\n                this.props.State.DefaultOperation.Game!=undefined?<SlotsScenes/>:<div></div>\n          }\n      </div>\n    );\n  }\n  \n}\n\nexport default connect(\n  state=>({State:state}),\n  dispatch => ({\n    AddContact: () => {\n      dispatch(CreateAction())\n    }\n  })\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    FirstBut:\"Start\",\r\n    FirstInputId:\"\",\r\n    FirstInputName:\"\"\r\n}\r\n \r\nexport default initialState;","\r\nimport {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\n\r\nfunction CreateScene(state){\r\n    if(state.FirstBut==\"Start\"){\r\n        return{\r\n            ...state,\r\n            Game:{\r\n                GameName:state.FirstInputName,\r\n                Id:state.FirstInputId,\r\n                SceneList:{\r\n                    0:{\r\n                        id:\"0\",\r\n                        SceneName : \"SceneName\",\r\n                        GameType : \"Slot\",\r\n                        NumberOfReels : 5,\r\n                        ScernTypeOfConf:{\r\n                            Symbols:false,\r\n                            Paytable:false,\r\n                            Substitutes:false,\r\n                            Special:false,\r\n                            Reelstrip:false,\r\n                        },\r\n                        SlectedScernTypeOfConf:\"\",\r\n                        Symbols:{\r\n                            \r\n                        },\r\n                        \r\n                        TotalRTP: \"0\",\r\n                        BaseGameRTP: \"0\",\r\n                        FreespinsRTP: \"0\",\r\n                        BonusGameRTP: \"0\",\r\n                        BasegameHitRate: \"0\",\r\n                        HitRate:{},\r\n                        Combinations:{},\r\n                        Returns:{}\r\n                    }\r\n                }\r\n            },\r\n            \r\n            \r\n            ScrenList:{\r\n                ...state.ScrenList,\r\n                    0:{\r\n                        Id:\"\"+0+\"\",\r\n                        display:\"flex\"\r\n                    },\r\n                },\r\n                BookmarkList:{\r\n                    ...state.BookmarkList,\r\n                        0:{\r\n                            Id:\"\"+0+\"\",\r\n                            backg:\"green\"\r\n                        },\r\n                    },\r\n                BookmarkOn:0\r\n            \r\n        }\r\n           \r\n    }\r\n    else if(keys(state.Game.SceneList).length==0){\r\n        return{\r\n            ...state,\r\n            Game:{\r\n                GameName:state.FirstInputName,\r\n                Id:state.FirstInputId,\r\n                SceneList:{\r\n                    0:{\r\n                        id:\"0\",\r\n                        SceneName : \"SceneName\",\r\n                        GameType : \"Slot\",\r\n                        NumberOfReels : 5,\r\n                        ScernTypeOfConf:{\r\n                            Symbols:false,\r\n                            Paytable:false,\r\n                            Substitutes:false,\r\n                            Special:false,\r\n                            Reelstrip:false,\r\n                        },\r\n                        SlectedScernTypeOfConf:\"\",\r\n                        Symbols:{\r\n                            \r\n                        },\r\n                        \r\n                        TotalRTP: \"0\",\r\n                        BaseGameRTP: \"0\",\r\n                        FreespinsRTP: \"0\",\r\n                        BonusGameRTP: \"0\",\r\n                        BasegameHitRate: \"0\",\r\n                        HitRate:{},\r\n                        Combinations:{},\r\n                        Returns:{}\r\n                    }\r\n                }\r\n            },\r\n            \r\n            \r\n            ScrenList:{\r\n                ...state.ScrenList,\r\n                    0:{\r\n                        Id:\"\"+0+\"\",\r\n                        display:\"flex\"\r\n                    },\r\n                },\r\n                BookmarkList:{\r\n                    ...state.BookmarkList,\r\n                        0:{\r\n                            Id:\"\"+0+\"\",\r\n                            backg:\"green\"\r\n                        },\r\n                    },\r\n                BookmarkOn:0\r\n            \r\n        }\r\n    }\r\n    else{\r\n        let N = 0\r\n        let C = false\r\n        while(!C){\r\n            \r\n            C=true;\r\n            for(let i = 0;i<keys(state.Game.SceneList).length;i++)\r\n            \r\n            {\r\n                if(N==keys(state.Game.SceneList)[i])\r\n                 C=false;\r\n            }\r\n            if(!C)\r\n                N++;\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        return{\r\n            ...state,\r\n            Game:{\r\n                ...state.Game,\r\n                SceneList:{\r\n                    ...state.Game.SceneList,\r\n                    [N]:{\r\n                        \r\n                        id:[N],\r\n                        SceneName : \"SceneName\",\r\n                        GameType : \"Slot\",\r\n                        NumberOfReels : 5,\r\n                        ScernTypeOfConf:{\r\n                            Symbols:false,\r\n                            Paytable:false,\r\n                            Substitutes:false,\r\n                            Special:false,\r\n                            Reelstrip:false,\r\n                        },\r\n                        SlectedScernTypeOfConf:\"\",\r\n                        Symbols:{\r\n                            \r\n                        },\r\n                        \r\n                        TotalRTP: \"0\",\r\n                        BaseGameRTP: \"0\",\r\n                        FreespinsRTP: \"0\",\r\n                        BonusGameRTP: \"0\",\r\n                        BasegameHitRate: \"0\",\r\n                        HitRate:{},\r\n                        Combinations:{},\r\n                        Returns:{}\r\n                    }\r\n                }\r\n            },\r\n            ScrenList:{\r\n            ...state.ScrenList,\r\n                [N]:{\r\n                    Id:\"\"+N+\"\",\r\n                    display:\"none\"\r\n                },\r\n            },\r\n            BookmarkList:{\r\n                ...state.BookmarkList,\r\n                    [N]:{\r\n                        Id:\"\"+N+\"\",\r\n                        backg:\"white\"\r\n                    },\r\n                },\r\n        }\r\n    }\r\n    return state\r\n}\r\nexport default CreateScene","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction InputFid(state, action){\r\n    return{\r\n        ...state,\r\n        FirstInputId: action.paylot\r\n    }\r\n}\r\nfunction InputFN(state, action){\r\n    return{\r\n        ...state,\r\n        FirstInputName: action.paylot\r\n    }\r\n}\r\nfunction InputSN(state, action){\r\n    return {\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    SceneName : action.paylot.v1,\r\n                }\r\n            }\r\n        },\r\n        \r\n        \r\n    }\r\n}\r\nfunction InputGT(state, action){\r\n    return {\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    GameType : action.paylot.v1,\r\n                }\r\n            }\r\n        },\r\n        \r\n        \r\n    }\r\n}\r\n\r\nfunction InputNOR(state, action){\r\n    return {\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    NumberOfReels : action.paylot.v1,\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n}\r\nexport {InputFid, InputFN, InputSN, InputGT, InputNOR}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction DeleteScene(state, action){\r\n    if(keys(state.BookmarkList).length==1)\r\n            return{\r\n                ...state,\r\n                Game:{\r\n                    ...state.Game,\r\n                    SceneList:{\r\n                        ...omit(state.Game.SceneList,action.paylot)\r\n                    }\r\n                    \r\n                },\r\n                BookmarkList:{\r\n                    ...omit(state.BookmarkList,action.paylot),\r\n                },\r\n                ScrenList:{\r\n                    ...omit(state.ScrenList,action.paylot)\r\n                },\r\n                BookmarkOn:0\r\n            }\r\n         else{\r\n             let k = keys(omit(state.ScrenList,action.paylot))[0]\r\n             \r\n            return{\r\n                ...state,\r\n                Game:{\r\n                    ...state.Game,\r\n                    SceneList:{\r\n                        \r\n                        ...omit(state.Game.SceneList,action.paylot),\r\n                        \r\n                    }\r\n                    \r\n                },\r\n                BookmarkList:{\r\n                    \r\n                    ...omit(state.BookmarkList,action.paylot),\r\n                    [k]:{\r\n                        Id:\"\"+k+\"\",\r\n                        backg:\"green\"\r\n                    },\r\n                },\r\n                ScrenList:{\r\n                    \r\n                    ...omit(state.ScrenList,action.paylot),\r\n                    [k]:{\r\n                        Id:\"\"+k+\"\",\r\n                        display:\"flex\"\r\n                    },\r\n                },\r\n                BookmarkOn:k\r\n            }\r\n         }\r\n}\r\n\r\nexport {DeleteScene}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction Select(state, action){\r\n    \r\n    if(state.BookmarkOn!=action.paylot)\r\n    return{\r\n        ...state,\r\n        ScrenList:{\r\n            ...state.ScrenList,\r\n                [action.paylot]:{\r\n                    Id:\"\"+action.paylot+\"\",\r\n                    display:\"flex\"\r\n                },\r\n                [state.BookmarkOn]:{\r\n                    Id:\"\"+[state.BookmarkOn]+\"\",\r\n                    display:\"none\"\r\n                },\r\n            },\r\n        BookmarkList:{\r\n                ...state.BookmarkList,\r\n                    [action.paylot]:{\r\n                        Id:\"\"+action.paylot+\"\",\r\n                        backg:\"green\"\r\n                    },\r\n                    [state.BookmarkOn]:{\r\n                        Id:\"\"+[state.BookmarkOn]+\"\",\r\n                        backg:\"white\"\r\n                    },\r\n        },\r\n        BookmarkOn:action.paylot\r\n    }\r\n    else{\r\n        return{\r\n            ...state\r\n        }\r\n    }\r\n}\r\n\r\nfunction SelectMC(state, action){\r\n    \r\n    let v, s=action.paylot.v1, s2=\"\"\r\n    switch(action.paylot.v1){\r\n        case \"Symbols\":{\r\n            \r\n            if(state.Game.SceneList[action.paylot.v2].ScernTypeOfConf.Symbols){\r\n                s2=\"\"\r\n                v=false\r\n            }\r\n            else{\r\n                if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"Symbols\")\r\n                    s2=state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf\r\n                v=true\r\n            }\r\n            break\r\n        }\r\n        case \"Paytable\":{\r\n            if(state.Game.SceneList[action.paylot.v2].ScernTypeOfConf.Paytable){\r\n                s2=\"\"\r\n                v=false\r\n            }\r\n            else{\r\n                if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"Paytable\")\r\n                    s2=state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf\r\n                v=true\r\n            }\r\n            break\r\n        }\r\n        case \"Substiture\":{\r\n            if(state.Game.SceneList[action.paylot.v2].ScernTypeOfConf.Substiture){\r\n                s2=\"\"\r\n                v=false\r\n            }\r\n            else{\r\n                if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"Substiture\")\r\n                    s2=state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf\r\n                v=true\r\n            }\r\n            break\r\n        }\r\n        case \"Special\":{\r\n            if(state.Game.SceneList[action.paylot.v2].ScernTypeOfConf.Special){\r\n                s2=\"\"\r\n                v=false\r\n            }\r\n            else{\r\n                if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"Special\")\r\n                    s2=state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf\r\n                v=true\r\n            }\r\n            break\r\n        }\r\n        case \"Reelstrip\":{\r\n            if(state.Game.SceneList[action.paylot.v2].ScernTypeOfConf.Reelstrip){\r\n                s2=\"\"\r\n                v=false\r\n            }\r\n            else{\r\n                if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"Reelstrip\")\r\n                    s2=state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf\r\n                v=true\r\n            }\r\n            break\r\n        }\r\n    }\r\n    if(s!=s2) \r\n    if(state.Game.SceneList[action.paylot.v2].SlectedScernTypeOfConf!=\"\") \r\n    return{\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    \r\n                    ScernTypeOfConf:{\r\n                        ...state.Game.SceneList[action.paylot.v2].ScernTypeOfConf,\r\n                        [s]:v,\r\n                        [s2]:!v,\r\n                    },\r\n                    SlectedScernTypeOfConf:action.paylot.v1\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n    else\r\n    return{\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    \r\n                    ScernTypeOfConf:{\r\n                        ...state.Game.SceneList[action.paylot.v2].ScernTypeOfConf,\r\n                        [s]:v,\r\n                        \r\n                    },\r\n                    SlectedScernTypeOfConf:action.paylot.v1\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n    return{\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v2]:{\r\n                    ...state.Game.SceneList[action.paylot.v2],\r\n                    \r\n                    ScernTypeOfConf:{\r\n                        ...state.Game.SceneList[action.paylot.v2].ScernTypeOfConf,\r\n                        [s]:v,\r\n                        \r\n                    },\r\n                    SlectedScernTypeOfConf:\"\"\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport {Select, SelectMC}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction StartReset(state, action){\r\n    if(state.FirstBut==\"Start\"){\r\n        return{\r\n            ...state,\r\n            FirstBut:\"Reset\"\r\n        }\r\n    }\r\n    else{\r\n        return{\r\n            \r\n            \r\n            \r\n                FirstBut:\"Start\",\r\n                FirstInputId:\"\",\r\n                FirstInputName:\"\"\r\n            \r\n        }\r\n    }\r\n\r\n}\r\nexport {StartReset}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction AddSymbol(state, action){\r\n    let PayT={}\r\n    let Subst={}\r\n    let masKey\r\n    let N=0\r\n    let symbols=state.Game.SceneList[action.paylot].Symbols\r\n    let S={}\r\n \r\n    let State = state\r\n    \r\n    if(keys(state.Game.SceneList[action.paylot].Symbols).length==0)\r\n    {\r\n        \r\n        N=0;\r\n        PayT={\r\n            ...PayT,\r\n            1:0\r\n        }\r\n        symbols={\r\n            \r\n            [N]:{\r\n                name:\"Symbol_\"+N,\r\n                id:\"s\"+N+\"w\",\r\n                Paytable:{\r\n                    [N+1]:0\r\n                },\r\n                Substiture:{\r\n                    [\"Symbol_\"+N]:false\r\n                   \r\n                },\r\n                Special:{\r\n                    isWild:false,\r\n                    isScatter:false,\r\n                    isSpecific:false\r\n                }\r\n            },\r\n            \r\n        }\r\n        \r\n    }\r\n        \r\n    else\r\n        {\r\n            \r\n            let C = false\r\n            while(!C){\r\n                \r\n                C=true;\r\n                for(let i = 0;i<keys(state.Game.SceneList[action.paylot].Symbols).length;i++)\r\n            \r\n                {\r\n                    if(N==keys(state.Game.SceneList[action.paylot].Symbols)[i])\r\n                    C=false;\r\n                }\r\n                if(!C)\r\n                    N++;\r\n            \r\n            }\r\n            \r\n            \r\n            masKey=keys(State.Game.SceneList[action.paylot].Symbols)\r\n            for(var i = 0;i<masKey.length+1;i++)\r\n            {\r\n                if(i<masKey.length)\r\n                symbols={\r\n                    ...symbols,\r\n                    [masKey[i]]:{\r\n                        ...symbols[masKey[i]],\r\n                        Paytable:{\r\n                            ...symbols[masKey[i]].Paytable,\r\n                            [masKey.length+1]:0\r\n                           \r\n                        }\r\n                    }\r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n            for(let i = 1;i<=masKey.length+1;i++)\r\n            {\r\n                \r\n                PayT={\r\n                    ...PayT,\r\n                    [i]:0\r\n                }\r\n                if(i<masKey.length+1)\r\n                Subst={\r\n                    ...Subst,\r\n                    [symbols[masKey[i-1]].name]:false\r\n                }\r\n                else\r\n                Subst={\r\n                    ...Subst,\r\n                    [\"Symbol_\"+N]:false\r\n                }\r\n            }\r\n            for(var i = 0;i<masKey.length+1;i++)\r\n            {\r\n                if(i<masKey.length)\r\n                symbols={\r\n                    ...symbols,\r\n                    [masKey[i]]:{\r\n                        ...symbols[masKey[i]],\r\n                        Substiture:{\r\n                            ...symbols[masKey[i]].Substiture,\r\n                            [\"Symbol_\"+N]:false\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                \r\n                \r\n            }\r\n            symbols={\r\n              ...symbols,\r\n              [N]:{\r\n                name:\"Symbol_\"+N,\r\n                id:\"s\"+N+\"w\",\r\n                Paytable:{\r\n                    ...PayT,\r\n                },\r\n                Substiture:{\r\n                    ...Subst\r\n                },\r\n                Special:{\r\n                    isWild:false,\r\n                    isScatter:false,\r\n                    isSpecific:false\r\n                }\r\n              }\r\n            }\r\n            \r\n        }\r\n    return {\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot]:{\r\n                    ...state.Game.SceneList[action.paylot],\r\n                    \r\n                    Symbols:{\r\n                        ...symbols\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport {AddSymbol}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nfunction DeleteSymbol(state, action){\r\n    return {\r\n        ...state,\r\n        Game:{\r\n            ...state.Game,\r\n            SceneList:{\r\n                ...state.Game.SceneList,\r\n                [action.paylot.v1]:{\r\n                    ...state.Game.SceneList[action.paylot.v1],\r\n                    \r\n                    Symbols:{\r\n                        \r\n                        ...omit(state.Game.SceneList[action.paylot.v1].Symbols,action.paylot.v2)\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        \r\n    }\r\n}\r\nexport {DeleteSymbol}","import {keys} from \"lodash\"\r\nimport {omit} from 'lodash'\r\n\r\nimport initialState from './initialState';\r\nimport CreateScene from './components/CreateScene'\r\nimport {InputFid, InputFN, InputSN, InputGT, InputNOR} from './components/Inputs'\r\nimport {DeleteScene} from './components/Deletes'\r\nimport {Select, SelectMC} from './components/Select' \r\nimport {StartReset} from './components/StartReset'\r\nimport {AddSymbol} from './components/AddSymbol'\r\nimport {DeleteSymbol} from './components/DeleteSymbol'\r\n\r\n function DefaultOpration(state = initialState, action){\r\n    switch(action.type) {\r\n        \r\n        \r\n        case \"ADD_NEW_SCENE\": {\r\n            return CreateScene(state, action)\r\n        }\r\n        case \"ADD_SYMBOL\": {\r\n            return AddSymbol(state, action)\r\n        }\r\n        case \"DELETE_SCENE\":{\r\n         return DeleteScene(state, action)\r\n        }\r\n        case \"DELETE_SYMBOL\":{\r\n            return DeleteSymbol(state, action)\r\n           }\r\n        case \"SELECT\":{\r\n            return Select(state, action)\r\n        }\r\n        case \"SELECT_MENU_CONFIG\":{\r\n            return SelectMC(state, action)\r\n        }\r\n        case \"START_RESET\":{\r\n            return StartReset(state, action)\r\n        }\r\n        case \"INPUT_FID\":{\r\n            return InputFid(state, action)\r\n        }\r\n        case \"INPUT_FNAME\":{\r\n           return InputFN(state, action)\r\n        }\r\n        case \"INPUT_SCENE_NAME\": {\r\n            return InputSN(state, action)\r\n        }\r\n        case \"INPUT_NUM_REELS\": {\r\n            return InputNOR(state, action)\r\n        }\r\n        case \"INPUT_GAME_TYPE\": {\r\n            return InputGT(state, action)\r\n        }\r\n        default: return state;\r\n    }\r\n} \r\nexport default DefaultOpration;","\r\n\r\nimport DefaultOperation from './DefaultOperation'\r\n\r\nimport { combineReducers } from 'redux';\r\n  \r\nexport default combineReducers({\r\n    \r\n    DefaultOperation,\r\n    \r\n    \r\n    \r\n\r\n  })\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore  from './Store/CreateStore';\n\n\n  const store = configureStore();\n \n  //Note that subscribe() returns a function for unregistering the listener\n   \n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n","import {createStore} from 'redux';  \r\nimport MainReducer from './reducers/MainReducer';  \r\n \r\n/*Create a function called configureStore */\r\n \r\nexport default function configureStore() {  \r\n  return createStore(MainReducer);\r\n}"],"sourceRoot":""}